<!DOCTYPE html>
<html>
    <head> 
        <meta name="viewport" content="width=device-width, initial-scale=1">
        
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
        <link rel="stylesheet" href="https://cdn.datatables.net/1.10.22/css/jquery.dataTables.min.css">
        
        <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.3/dist/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
        
        <script src="https://cdn.datatables.net/1.10.22/js/jquery.dataTables.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
     <title>Dashboard</title>
    </head>
    <body>

    <br>
    <h1 style='text-align:center;'>IB Options Scanner</h1>
    <br><br>
    <div class="table-responsive">
        <table class="table table-bordered" id="priceTable">
        </table>
    </div>
    <br></br>
    <br></br>
    <hr>
    

    

    <div class="bg-success" style="display: flex;">
    <div class="col-4 offset-2 my-5" >
       <div class="card" style="border: 1 px solid red;">
            <div ><canvas id="myChart"></canvas></div>
            <hr>
            <div ><canvas id="myChart1"></canvas></div>
            <script>
            var client_id = Date.now()
            var ws = new WebSocket(`ws://localhost:8000/ws/${client_id}`);
            var price_table=null;
            ws.onmessage = function(event) {
                const data=JSON.parse(event.data);
                
                //const data=[ [4000, 4100, 4200, 4300, 4400, 4500],[10, 20, 30, 40, 50, 60],[-10, -20, -30, -40, -50, -6]]
                create_chart(data.chart_data)

            };

            var create_chart=function(data){
                console.log(data)

                var existingCharts = ["myChart", "myChart1"];
                for (var i = 0; i < existingCharts.length; i++) {
                    var chartId = existingCharts[i];
                    var existingChart = Chart.getChart(chartId);

                    // Check if the chart exists and destroy it
                    if (existingChart) {
                    existingChart.data.labels=data[0]
                    existingChart.data.datasets[0].data = data[1];
                    existingChart.data.datasets[1].data = data[2];


                    }
                    else{

                        var ctx = document.getElementById(chartId)
                        var barChart=new Chart(ctx, {
                            type: 'bar',
                            data: {
                                labels: [],
                                datasets: [
                                            {
                                            label: 'd1',
                                            data: [],
                                            backgroundColor:['rgba(0, 0, 128, 0.5)', ],
                                            borderWidth: 1,
                                            barThickness: 5,
                                            },

                                            {
                                            label: 'd1',
                                            data: [],
                                            backgroundColor:['rgba(255, 140, 0, 0.5)',],
                                            borderWidth: 1,
                                            barThickness: 5,
                                        },
                            ]
                            },
                            options: {
                                scales: {
                                x: {stacked: true,},
                                y: {
                                    beginAtZero: true,
                                    stacked: true,
                                }
                                }
                            }
                        });

                        
                    }
                }
           
            
            }
            
            </script>

       </div>
    </div>

    </div>

    



    <script>
        var client_id = Date.now()
        var ws = new WebSocket(`ws://localhost:8000/ws/${client_id}`);
        var price_table=null;
        ws.onmessage = function(event) {
            data=JSON.parse(event.data);
            console.log(data.chart_data);

            // if(!price_table){
            //     create_price_table(data);
            // }
            // else{
            //     update_price_table(data);
            // } 

        };


        function sendMessage(event) {
            var input = document.getElementById("messageText")
            ws.send(input.value)
            input.value = ''
            event.preventDefault()
        }

        var create_price_table = function(table_data){
                price_table = $('#priceTable').DataTable({
                                    "ordering": true,
                                    "data": table_data,
                                    "bPaginate": false,
                                    "bLengthChange": true,
                                    "bFilter": true,
                                    "bInfo": false,
                                    "bAutoWidth": true,
                                    "order": [],
                                    "columns": [
                                    
                                    
                                    {'data':'time', 'title':'time'},
                                    {'data':'delta','title':'delta'},
                                    {'data':'expiry', 'title':'expiry'},
                                    {'data':'localSymbol', 'title':'symbol'},
                                    {'data':'hv-iv', 'title':'hv-iv'},
                                    {'data':'call_spread', 'title':'call_spread'},
                                    {'data':'put_spread', 'title':'put_spread'},
                                    {'data':'RR', 'title':'RR'},
                                    {'data':'max_pain', 'title':'max_pain'},
                                    {'data':'min_pain', 'title':'min_pain'},
                                    
                                    {'data':'call/vanna', 'title':'call/vanna'},
                                    {'data':'put/vanna', 'title':'put/vanna'},
                                    {'data':'call/charm', 'title':'call/charm'},
                                    {'data':'put/charm', 'title':'put/charm'},
                                    
                                    
                                    
                                    
                                    {'data':'OI/R', 'title':'OI/R'},
                                    {'data':'OI/S', 'title':'OI/S'},
                                    {'data':'gamma/C', 'title':'gamma/C'},
                                    {'data':'gamma/P', 'title':'gamma/P'},
                                    {'data':'P/C Volume', 'title':'P/C Volume'},
                                    {'data':'call_open_%', 'title':'call_open_%'},
                                    {'data':'call_close_%', 'title':'call_close_%'},
                                    {'data':'put_open_%', 'title':'put_open_%'},
                                    {'data':'put_close_%', 'title':'put_close_%'},
                                    {'data':'RR 14 DAYS', 'title':'RR 14 DAYS'},
                                    {'data':'RR TODAY', 'title':'RR TODAY'},
                                    
                                    
                                    
                                    ], 
                                    
                });
            }

            var update_price_table = function(table_data){
                price_table.clear();
                price_table.rows.add(table_data);
                price_table.draw(false);
            }


    </script>

    </body>
</html>